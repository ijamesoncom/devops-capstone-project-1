#
# This pipeline needs the following tasks from Tekton Hub
#   - git-clone
#   - flake8
#
---
# Версия API для Tekton Pipelines
apiVersion: tekton.dev/v1beta1

# Тип ресурса - в данном случае Pipeline
kind: Pipeline

# Метаданные Pipeline
metadata:
  # Уникальное имя Pipeline в пределах кластера
  name: cd-pipeline

# Спецификация Pipeline
spec:
  # Рабочие области, используемые в Pipeline
  workspaces:
    # Рабочая область 'pipeline-workspace'
    - name: pipeline-workspace

  # Входные параметры для Pipeline
  params:
    # Параметр 'repo-url'
    - name: repo-url
    # Параметр 'branch' с значением по умолчанию 'main'
    - name: branch
      default: main

  # Список задач, выполняемых в Pipeline
  tasks:
    # Задача 1: Init (Cleanup Task)
    - name: init
      # Рабочие области, используемые в задаче
      workspaces:
        # Рабочая область 'source' связана с 'pipeline-workspace'
        - name: source
          workspace: pipeline-workspace
      # Ссылка на предопределенную задачу 'cleanup'
      taskRef:
        name: cleanup
  
    # Задача 2: Clone (Git-Clone Task)
    - name: clone
      # Рабочие области, используемые в задаче
      workspaces:
        # Рабочая область 'output' связана с 'pipeline-workspace'
        - name: output
          workspace: pipeline-workspace
      # Ссылка на предопределенную задачу 'git-clone'
      taskRef:
        name: git-clone
      # Входные параметры для задачи
      params:
      # Параметр 'url', значение берется из параметра 'repo-url' Pipeline
      - name: url
        value: $(params.repo-url)
      # Параметр 'revision', значение берется из параметра 'branch' Pipeline
      - name: revision
        value: $(params.branch)
      # Указание на выполнение задачи 'clone' после завершения задачи 'init'
      runAfter:
        - init

    # Задача 3: lint (flake8 Task)    
    - name: lint
      workspaces:
        # Указываем рабочую область 'source', которая будет использоваться для задачи lint
        - name: source
          workspace: pipeline-workspace
      taskRef:
        # Ссылка на задачу flake8, которая будет выполняться в этом шаге
        name: flake8
      params:
        # Устанавливаем образ для выполнения flake8 в контейнере
      - name: image
        value: "python:3.9-slim"
      # Указываем аргументы, которые будут переданы flake8 для выполнения статического анализа кода
      - name: args
        value: ["--count", "--max-complexity=10", "--max-line-length=127", "--statistics"]
      runAfter:
        # Задаем зависимость от шага 'clone', чтобы задача lint выполнялась только после успешного завершения шага 'clone'
        - clone
