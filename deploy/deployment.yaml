apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: accounts  # Метка, которая идентифицирует данный Deployment как часть приложения accounts.
  name: accounts  # Имя данного Deployment.
spec:
  replicas: 3  # Количество реплик (экземпляров) приложения, которые должны быть развернуты.
  selector:
    matchLabels:
      app: accounts  # Метка, по которой будут выбираться Pods, созданные данным Deployment.
  strategy: {}  # Стратегия обновления Deployment. Если пусто, используется стратегия RollingUpdate по умолчанию.
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: accounts  # Метка для Pods, созданных данным Deployment.
    spec:
      containers:
      - image: IMAGE_NAME_HERE  # Имя образа контейнера. Здесь будет заменено на актуальное имя образа в Tekton Pipeline.
        name: accounts  # Имя контейнера внутри Pod.
        env:  # Определение переменных окружения для контейнера.
          - name: DATABASE_HOST
            value: postgresql  # Имя хоста, на котором развернута база данных PostgreSQL.
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: postgresql  # Имя секрета, содержащего данные для доступа к базе данных.
                key: database-name  # Ключ, содержащий имя базы данных в секрете.
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql  # Имя секрета, содержащего данные для доступа к базе данных.
                key: database-password  # Ключ, содержащий пароль для доступа к базе данных в секрете.
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: postgresql  # Имя секрета, содержащего данные для доступа к базе данных.
                key: database-user  # Ключ, содержащий имя пользователя для доступа к базе данных в секрете.
